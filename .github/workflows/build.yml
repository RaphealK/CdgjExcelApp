name: Build Android APK (with manual SSH)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y git zip unzip openjdk-11-jdk autoconf automake libtool pkg-config zlib1g-dev libncurses5-dev libncursesw5-dev cmake libffi-dev libssl-dev
        # 修复 libtinfo5 问题
        wget http://security.ubuntu.com/ubuntu/pool/universe/n/ncurses/libtinfo5_6.3-2ubuntu0.1_amd64.deb
        sudo apt install ./libtinfo5_6.3-2ubuntu0.1_amd64.deb
        pip install --upgrade pip
        pip install buildozer cython virtualenv
        
        # 安装完整版本的 autoconf 和 libtool
        wget http://ftp.gnu.org/gnu/autoconf/autoconf-2.69.tar.gz
        tar xvf autoconf-2.69.tar.gz
        cd autoconf-2.69
        ./configure && make && sudo make install
        cd ..
        rm -rf autoconf-2.69*
        
        wget http://ftp.gnu.org/gnu/libtool/libtool-2.4.6.tar.gz
        tar xvf libtool-2.4.6.tar.gz
        cd libtool-2.4.6
        ./configure && make && sudo make install
        cd ..
        rm -rf libtool-2.4.6*
        
    - name: Install Python dependencies
      run: |
        pip install --upgrade pip
        pip install buildozer cython virtualenv

    - name: Build APK
      run: |
        buildozer -v android release

    # 当你手动构建完成后，并且 APK 文件位于正确的路径下，
    # 在关闭 SSH 连接后，下面的步骤将继续执行。
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: meter-entry-app
        path: bin/*.apk
