name: Android Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.8"
        cache: "pip"   # 自动缓存 pip 依赖

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y git zip unzip openjdk-11-jdk wget curl \
          autoconf automake libtool pkg-config zlib1g-dev \
          libncurses5-dev libncursesw5-dev cmake libffi-dev libssl-dev

        # 修复 libtinfo5 问题
        wget http://security.ubuntu.com/ubuntu/pool/universe/n/ncurses/libtinfo5_6.3-2ubuntu0.1_amd64.deb
        sudo apt install ./libtinfo5_6.3-2ubuntu0.1_amd64.deb

    # 缓存 Android SDK
    - name: Cache Android SDK
      uses: actions/cache@v4
      with:
        path: ~/android-sdk
        key: android-sdk-${{ runner.os }}-v1

    - name: Install Android SDK command-line tools
      if: steps.cache-android-sdk.outputs.cache-hit != 'true'
      run: |
        ANDROID_SDK_ROOT=$HOME/android-sdk
        mkdir -p $ANDROID_SDK_ROOT/cmdline-tools
        cd $HOME
        wget https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
        unzip commandlinetools-linux-11076708_latest.zip -d $ANDROID_SDK_ROOT/cmdline-tools
        mv $ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools $ANDROID_SDK_ROOT/cmdline-tools/latest
        rm commandlinetools-linux-11076708_latest.zip
        echo "export ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
        echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH
        echo "$ANDROID_SDK_ROOT/platform-tools" >> $GITHUB_PATH

    - name: Configure Android SDK
      run: |
        export ANDROID_SDK_ROOT=$HOME/android-sdk
        yes | sdkmanager --licenses || true
        sdkmanager "platform-tools" "platforms;android-30" "build-tools;30.0.3"

    - name: Install Python dependencies
      run: |
        pip install --upgrade pip
        pip install buildozer cython virtualenv

    # 缓存 Buildozer 的 .buildozer 目录（Gradle / SDK / NDK 缓存）
    - name: Cache Buildozer .buildozer
      uses: actions/cache@v4
      with:
        path: .buildozer
        key: buildozer-${{ runner.os }}-${{ hashFiles('buildozer.spec') }}

    - name: Build APK
      run: |
        buildozer android debug

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: meter-replacement-app
        path: bin/*.apk