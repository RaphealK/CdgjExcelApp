name: Android Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.8"

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y git zip unzip openjdk-11-jdk wget curl \
          autoconf automake libtool pkg-config zlib1g-dev \
          libncurses5-dev libncursesw5-dev cmake libffi-dev libssl-dev

        # 修复 libtinfo5 问题
        wget http://security.ubuntu.com/ubuntu/pool/universe/n/ncurses/libtinfo5_6.3-2ubuntu0.1_amd64.deb
        sudo apt install ./libtinfo5_6.3-2ubuntu0.1_amd64.deb

        # 安装最新 autoconf & libtool（避免版本过低）
        wget http://ftp.gnu.org/gnu/autoconf/autoconf-2.69.tar.gz
        tar xvf autoconf-2.69.tar.gz
        cd autoconf-2.69
        ./configure && make -j$(nproc) && sudo make install
        cd ..
        rm -rf autoconf-2.69*

        wget http://ftp.gnu.org/gnu/libtool/libtool-2.4.6.tar.gz
        tar xvf libtool-2.4.6.tar.gz
        cd libtool-2.4.6
        ./configure && make -j$(nproc) && sudo make install
        cd ..
        rm -rf libtool-2.4.6*

    - name: Install Android SDK command-line tools
      run: |
        ANDROID_SDK_ROOT=$HOME/android-sdk
        mkdir -p $ANDROID_SDK_ROOT/cmdline-tools
        cd $HOME
        wget https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
        unzip commandlinetools-linux-11076708_latest.zip -d $ANDROID_SDK_ROOT/cmdline-tools
        mv $ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools $ANDROID_SDK_ROOT/cmdline-tools/latest
        rm commandlinetools-linux-11076708_latest.zip
        echo "export ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
        echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH
        echo "$ANDROID_SDK_ROOT/platform-tools" >> $GITHUB_PATH

    - name: Accept Android SDK licenses
      run: |
        yes | sdkmanager --licenses || true
        sdkmanager "platform-tools" "platforms;android-30" "build-tools;30.0.3"

    - name: Install Buildozer
      run: |
        pip install --upgrade pip
        pip install buildozer cython virtualenv

    - name: Build APK
      run: |
        buildozer android debug

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: meter-replacement-app
        path: bin/*.apk